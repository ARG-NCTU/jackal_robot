<!--
Launch driver components of Jackal's supported accessories.

Be careful that the defaults in this file are kept aligned with those
in the URDF. See jackal_description/urdf/accessories.urdf.xacro.
-->
<launch>
  <group if="$(optenv JACKAL_LASER 0)">
    <!--
      We support 3 different lidar accessories out of the box:
        - sick lms1xx (default) if JACKAL_LASER=1
        - hokuyo ust10 if JACKAL_LASER=1 && JACKAL_LASER_HOKUYO=1
        - slamtec a1/2 if JACKAL_LASER=1 && JACKAL_LASER_RP=1
    -->
    <group if="$(optenv JACKAL_LASER_HOKUYO 0)">
      <node pkg="urg_node" name="hokuyo" type="urg_node">
        <param name="ip_address" value="$(optenv JACKAL_LASER_HOST 192.168.131.20)" />
        <param name="frame_id" value="$(optenv JACKAL_LASER_MOUNT front)_laser" />
        <remap from="scan" to="$(optenv JACKAL_LASER_TOPIC front/scan)" />
      </node>
    </group>
    <group unless="$(optenv JACKAL_LASER_HOKUYO 0)">
      <group if="$(optenv JACKAL_LASER_RP 0)">
        <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
          <!-- TODO: change ttyUSB0 to a symlink according to a udev rule we'll create later -->
          <param name="serial_port"         type="string" value="$(optenv JACKAL_LASER_RP_PORT /dev/ttyUSB0)"/>
          <param name="serial_baudrate"     type="int"    value="$(optenv JACKAL_LASER_RP_BAUD 115200)"/><!--A1/A2 = 115200, A3 = 256000 -->
          <param name="frame_id"            type="string" value="$(optenv JACKAL_LASER_MOUNT front)_laser"/>
          <param name="inverted"            type="bool"   value="false"/>
          <param name="angle_compensate"    type="bool"   value="true"/>
          <remap from="scan" to="$(optenv JACKAL_LASER_TOPIC front/scan)" />
        </node>
      </group>
      <group unless="$(optenv JACKAL_LASER_RP 0)">
        <node pkg="lms1xx" name="lms1xx" type="LMS1xx_node">
          <param name="host" value="$(optenv JACKAL_LASER_HOST 192.168.131.20)" />
          <param name="frame_id" value="$(optenv JACKAL_LASER_MOUNT front)_laser" />
          <remap from="scan" to="$(optenv JACKAL_LASER_TOPIC front/scan)" />
        </node>
      </group>
    </group>
  </group>

  <!-- Optional Point Grey Bumblebee2 camera, typically front-facing. -->
  <group if="$(optenv JACKAL_BB2 0)" ns="camera">
    <node pkg="nodelet" type="nodelet" name="bumblebee2_nodelet_manager" args="manager" />

    <node pkg="nodelet" type="nodelet" name="bumblebee2_nodelet"
          args="load pointgrey_camera_driver/PointGreyStereoCameraNodelet bumblebee2_nodelet_manager" >
      <param name="frame_id" value="$(optenv JACKAL_BB2_MOUNT front)_camera" />
      <param name="frame_rate" value="15" />
      <param name="first_namespace" value="left" />
      <param name="second_namespace" value="right" />
      <param name="format7_color_coding" value="raw16" />
      <param name="serial" value="$(optenv JACKAL_BB2_SERIAL 0)" />

      <!-- Use the camera_calibration package to create these files -->
      <param name="camera_info_url" if="$(optenv JACKAL_BB2_CALIBRATION 0)"
             value="file://$(env HOME)/.ros/camera_info/$(optenv JACKAL_BB2_SERIAL 0).yaml" />
      <param name="second_info_url" if="$(optenv JACKAL_BB2_CALIBRATION 0)"
             value="file://$(env HOME)/.ros/camera_info/$(optenv JACKAL_BB2_SERIAL 0)_right.yaml" />
    </node>
    <node pkg="nodelet" type="nodelet" name="image_proc_debayer_left"
        args="load image_proc/debayer bumblebee_nodelet_manager">
      <remap from="image_raw" to="left/image_raw"/>
      <remap from="image_mono" to="left/image_mono"/>
      <remap from="image_color" to="left/image_color"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="image_proc_debayer_right"
        args="load image_proc/debayer bumblebee_nodelet_manager">
      <remap from="image_raw" to="right/image_raw"/>
      <remap from="image_mono" to="right/image_mono"/>
      <remap from="image_color" to="right/image_color"/>
    </node>
  </group>

  <!-- Optional Point Grey Flea3 camera, typically front-facing. -->
  <group if="$(optenv JACKAL_FLEA3 0)" ns="camera">
    <node pkg="nodelet" type="nodelet" name="flea3_nodelet_manager" args="manager" />

    <node pkg="nodelet" type="nodelet" name="flea3_nodelet"
          args="load pointgrey_camera_driver/PointGreyCameraNodelet flea3_nodelet_manager" >
      <param name="frame_id" value="$(optenv JACKAL_FLEA3_MOUNT front)_camera" />
      <param name="serial" value="$(optenv JACKAL_FLEA3_SERIAL 0)" />
      <param name="frame_rate" value="$(optenv JACKAL_FLEA3_FRAME_RATE 30)" />

      <!-- Use the camera_calibration package to create these files -->
      <param name="camera_info_url" if="$(optenv JACKAL_FLEA3_CALIBRATION 0)"
             value="file://$(env HOME)/.ros/camera_info/$(optenv JACKAL_FLEA3_SERIAL 0).yaml" />

    </node>
    <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
        args="load image_proc/debayer flea3_nodelet_manager">
    </node>
  </group>

  <!-- Optional stereo Point Grey Flea3 cameras, typically front-facing. -->
  <group if="$(optenv JACKAL_STEREO_FLEA3 0)" ns="camera">

    <group ns="left" >
      <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

      <node pkg="nodelet" type="nodelet" name="camera_nodelet"
            args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
            <param name="frame_id" value="$(optenv JACKAL_FLEA3_MOUNT front)_left_camera" />
            <param name="serial" value="$(optenv JACKAL_FLEA3_LEFT_SERIAL 0)" />
            <param name="frame_rate" value="$(optenv JACKAL_FLEA3_FRAME_RATE 30)" />

            <!-- Use the camera_calibration package to create these files -->
            <param name="camera_info_url" if="$(optenv JACKAL_FLEA3_LEFT_CALIBRATION 0)"
                   value="file://$(env HOME)/.ros/camera_info/$(optenv JACKAL_FLEA3_LEFT_SERIAL 0).yaml" />
      </node>

      <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
          args="load image_proc/debayer camera_nodelet_manager">
      </node>
    </group>

    <group ns="right" >
      <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

      <node pkg="nodelet" type="nodelet" name="camera_nodelet"
            args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
            <param name="frame_id" value="$(optenv JACKAL_FLEA3_MOUNT front)_right_camera" />
            <param name="serial" value="$(optenv JACKAL_FLEA3_RIGHT_SERIAL 0)" />
            <param name="frame_rate" value="$(optenv JACKAL_FLEA3_FRAME_RATE 30)" />

            <!-- Use the camera_calibration package to create these files -->
            <param name="camera_info_url" if="$(optenv JACKAL_FLEA3_RIGHT_CALIBRATION 0)"
                   value="file://$(env HOME)/.ros/camera_info/$(optenv JACKAL_FLEA3_RIGHT_SERIAL 0).yaml" />
      </node>

      <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
          args="load image_proc/debayer camera_nodelet_manager">
      </node>

    </group>

    <node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc">
      <param name="approximate_sync" value="true"/>
    </node>

  </group>


  <!-- Optional upgraded GPS receiver. -->
  <group ns="navsat/upgrade" if="$(optenv JACKAL_NAVSAT 0)">
    <node pkg="nmea_comms" type="serial_node" name="nmea_serial_node" output="screen">
      <param name="port" value="$(optenv JACKAL_NAVSAT_PORT /dev/clearpath/gps)" />
      <param name="baud" value="$(optenv JACKAL_NAVSAT_BAUD 57600)" />
      <param name="frame_id" value="$(optenv JACKAL_NAVSAT_MOUNT rear)_navsat" />
    </node>

    <!-- NMEA Interpretation -->
    <node pkg="nmea_navsat_driver" type="nmea_topic_driver" name="nmea_topic_driver" />

    <!-- Optional RTK relay -->
    <group if="$(optenv JACKAL_NAVSAT_RTK 0)">
      <node pkg="jackal_bringup" type="navsat_rtk_relay" name="navsat_rtk_relay"
            args="--serial-port /dev/clearpath/rtcm
                  --device $(optenv JACKAL_NAVSAT_RTK_DEVICE wlan0)
                  --baud $(optenv JACKAL_NAVSAT_RTK_BAUD 57600)" />
    </group>
  </group>

  <!-- Optional Azure Kinect -->
  <group if="$(optenv JACKAL_AZURE_KINECT 0)" ns="kinect">
    <!-- Parameters & node mainly copied from the Kinect's driver.launch file -->
    <arg name="tf_prefix"         default="" />               <!-- Prefix added to tf frame IDs. It typically contains a trailing '_' unless empty. -->

    <!--<param name="robot_description"
      command="xacro $(find azure_kinect_ros_driver)/urdf/azure_kinect.urdf.xacro tf_prefix:=$(arg tf_prefix)" />-->

    <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />-->

    <arg name="depth_enabled"           default="true" />           <!-- Enable or disable the depth camera -->
    <arg name="depth_mode"              default="WFOV_UNBINNED" />  <!-- Set the depth camera mode, which affects FOV, depth range, and camera resolution. See Azure Kinect documentation for full details. Valid options: NFOV_UNBINNED, NFOV_2X2BINNED, WFOV_UNBINNED, WFOV_2X2BINNED, and PASSIVE_IR -->
    <arg name="color_enabled"           default="true" />           <!-- Enable or disable the color camera -->
    <arg name="color_format"            default="bgra" />           <!-- The format of RGB camera. Valid options: bgra, jpeg -->
    <arg name="color_resolution"        default="1536P" />          <!-- Resolution at which to run the color camera. Valid options: 720P, 1080P, 1440P, 1536P, 2160P, 3072P -->
    <arg name="fps"                     default="5" />              <!-- FPS to run both cameras at. Valid options are 5, 15, and 30 -->
    <arg name="point_cloud"             default="true" />           <!-- Generate a point cloud from depth data. Requires depth_enabled -->
    <arg name="rgb_point_cloud"         default="true" />           <!-- Colorize the point cloud using the RBG camera. Requires color_enabled and depth_enabled -->
    <arg name="point_cloud_in_depth_frame" default="false" />        <!-- Whether the RGB pointcloud is rendered in the depth frame (true) or RGB frame (false). Will either match the resolution of the depth camera (true) or the RGB camera (false). -->
    <arg name="required"                default="false" />          <!-- Argument which specified if the entire launch file should terminate if the node dies -->
    <arg name="sensor_sn"               default="" />               <!-- Sensor serial number. If none provided, the first sensor will be selected -->
    <arg name="recording_file"          default="" />               <!-- Absolute path to a mkv recording file which will be used with the playback api instead of opening a device -->
    <arg name="recording_loop_enabled"  default="false" />          <!-- If set to true the recording file will rewind the beginning once end of file is reached -->
    <arg name="body_tracking_enabled"           default="false" />  <!-- If set to true the joint positions will be published as marker arrays -->
    <arg name="body_tracking_smoothing_factor"  default="0.0" />    <!-- Set between 0 for no smoothing and 1 for full smoothing -->
    <arg name="rescale_ir_to_mono8"  default="false" />    <!-- Whether to rescale the IR image to an 8-bit monochrome image for visualization and further processing. A scaling factor (ir_mono8_scaling_factor) is applied. -->
    <arg name="ir_mono8_scaling_factor"  default="1.0" />    <!-- Scaling factor to apply when converting IR to mono8 (see rescale_ir_to_mono8). If using illumination, use the value 0.5-1. If using passive IR, use 10. -->
    <arg name="imu_rate_target" default="0"/>                       <!-- Desired output rate of IMU messages. Set to 0 (default) for full rate (1.6 kHz). -->
    <arg name="wired_sync_mode" default="0"/>                       <!-- Wired sync mode. 0: OFF, 1: MASTER, 2: SUBORDINATE. -->
    <arg name="subordinate_delay_off_master_usec" default="0"/>     <!-- Delay subordinate camera off master camera by specified amount in usec. -->

    <node pkg="azure_kinect_ros_driver" type="node" name="azure_kinect_ros_driver" output="screen" required="$(arg required)">
      <param name="depth_enabled"     type="bool"   value="$(arg depth_enabled)" />
      <param name="depth_mode"        type="string" value="$(arg depth_mode)" />
      <param name="color_enabled"     type="bool"   value="$(arg color_enabled)" />
      <param name="color_format"      type="string" value="$(arg color_format)" />
      <param name="color_resolution"  type="string" value="$(arg color_resolution)" />
      <param name="fps"               type="int"    value="$(arg fps)" />
      <param name="point_cloud"       type="bool"   value="$(arg point_cloud)" />
      <param name="rgb_point_cloud"   type="bool"   value="$(arg rgb_point_cloud)" />
      <param name="point_cloud_in_depth_frame"   type="bool"   value="$(arg point_cloud_in_depth_frame)" />
      <param name="sensor_sn"         type="string" value="$(arg sensor_sn)" />
      <param name="tf_prefix"         type="string" value="$(arg tf_prefix)" />
      <param name="recording_file"          type="string" value="$(arg recording_file)" />
      <param name="recording_loop_enabled"  type="bool"   value="$(arg recording_loop_enabled)" />
      <param name="body_tracking_enabled"           type="bool"   value="$(arg body_tracking_enabled)" />
      <param name="body_tracking_smoothing_factor"  type="double" value="$(arg body_tracking_smoothing_factor)" />
      <param name="rescale_ir_to_mono8" type="bool" value="$(arg rescale_ir_to_mono8)" />
      <param name="ir_mono8_scaling_factor" type="double" value="$(arg ir_mono8_scaling_factor)" />
      <param name="imu_rate_target" type="int" value="$(arg imu_rate_target)"/>
      <param name="wired_sync_mode" type="int" value="$(arg wired_sync_mode)"/>
      <param name="subordinate_delay_off_master_usec" type="int" value="$(arg subordinate_delay_off_master_usec)"/>
    </node>

    <!-- Convert the Kinect pointcloud to a laserscan -->
    <node name="kinect_to_laserscan" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node">
      <remap from="cloud_in" to="kinect/points2" />
      <remap from="scan" to="$(optenv JACKAL_AZURE_KINECT_MOUNT front)/scan" />
      <param name="angle_min" value="-0.654498" />
      <param name="angle_max" value="0.654498" />
      <param name="angle_increment" value="0.008726917" />
      <param name="target_frame" value="$(optenv JACKAL_AZURE_KINECT_MOUNT front)_mount" />
      <param name="range_min" value="0.5" />
      <param name="range_max" value="5.46" />
      <param name="min_height" value="0.0" />
      <param name="max_height" value="1.0" />
    </node>
  </group>

  <group if="$(optenv JACKAL_REALSENSE 0)" ns="realsense">
    <arg name="serial_no"           default=""/>
    <arg name="usb_port_id"         default=""/>
    <arg name="device_type"         default=""/>
    <arg name="json_file_path"      default=""/>
    <arg name="camera"              default="camera"/>
    <arg name="tf_prefix"           default="$(arg camera)"/>
    <arg name="external_manager"    default="false"/>
    <arg name="manager"             default="realsense2_camera_manager"/>
    <arg name="base_frame_id"       default="$(optenv JACKAL_REANSENSE_MOUNT front_fender)_realsense" />

    <arg name="fisheye_width"       default="640"/>
    <arg name="fisheye_height"      default="480"/>
    <arg name="enable_fisheye"      default="true"/>

    <arg name="depth_width"         default="640"/>
    <arg name="depth_height"        default="480"/>
    <arg name="enable_depth"        default="true"/>

    <arg name="infra_width"        default="640"/>
    <arg name="infra_height"       default="480"/>
    <arg name="enable_infra1"       default="true"/>
    <arg name="enable_infra2"       default="true"/>

    <arg name="color_width"         default="640"/>
    <arg name="color_height"        default="480"/>
    <arg name="enable_color"        default="true"/>

    <arg name="fisheye_fps"         default="30"/>
    <arg name="depth_fps"           default="30"/>
    <arg name="infra_fps"           default="30"/>
    <arg name="color_fps"           default="30"/>
    <arg name="gyro_fps"            default="400"/>
    <arg name="accel_fps"           default="250"/>
    <arg name="enable_gyro"         default="true"/>
    <arg name="enable_accel"        default="true"/>

    <arg name="enable_pointcloud"         default="true "/>
    <arg name="pointcloud_texture_stream" default="RS2_STREAM_COLOR"/>
    <arg name="pointcloud_texture_index"  default="0"/>

    <arg name="enable_sync"               default="false"/>
    <arg name="align_depth"               default="false"/>

    <arg name="publish_tf"                default="true"/>
    <arg name="tf_publish_rate"           default="0"/>

    <arg name="filters"                   default=""/>
    <arg name="clip_distance"             default="-2"/>
    <arg name="linear_accel_cov"          default="0.01"/>
    <arg name="initial_reset"             default="false"/>
    <arg name="unite_imu_method"          default=""/>
    <arg name="topic_odom_in"             default="odom_in"/>
    <arg name="calib_odom_file"           default=""/>
    <arg name="publish_odom_tf"           default="true"/>
    <arg name="allow_no_texture_points"   default="false"/>


    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="tf_prefix"                value="$(arg tf_prefix)"/>
      <arg name="base_frame_id"            value="$(arg base_frame_id)"/>
      <arg name="external_manager"         value="$(arg external_manager)"/>
      <arg name="manager"                  value="$(arg manager)"/>
      <arg name="serial_no"                value="$(arg serial_no)"/>
      <arg name="usb_port_id"              value="$(arg usb_port_id)"/>
      <arg name="device_type"              value="$(arg device_type)"/>
      <arg name="json_file_path"           value="$(arg json_file_path)"/>

      <arg name="enable_pointcloud"        value="$(arg enable_pointcloud)"/>
      <arg name="pointcloud_texture_stream" value="$(arg pointcloud_texture_stream)"/>
      <arg name="pointcloud_texture_index"  value="$(arg pointcloud_texture_index)"/>
      <arg name="enable_sync"              value="$(arg enable_sync)"/>
      <arg name="align_depth"              value="$(arg align_depth)"/>

      <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
      <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
      <arg name="enable_fisheye"           value="$(arg enable_fisheye)"/>

      <arg name="depth_width"              value="$(arg depth_width)"/>
      <arg name="depth_height"             value="$(arg depth_height)"/>
      <arg name="enable_depth"             value="$(arg enable_depth)"/>

      <arg name="color_width"              value="$(arg color_width)"/>
      <arg name="color_height"             value="$(arg color_height)"/>
      <arg name="enable_color"             value="$(arg enable_color)"/>

      <arg name="infra_width"              value="$(arg infra_width)"/>
      <arg name="infra_height"             value="$(arg infra_height)"/>
      <arg name="enable_infra1"            value="$(arg enable_infra1)"/>
      <arg name="enable_infra2"            value="$(arg enable_infra2)"/>

      <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
      <arg name="depth_fps"                value="$(arg depth_fps)"/>
      <arg name="infra_fps"                value="$(arg infra_fps)"/>
      <arg name="color_fps"                value="$(arg color_fps)"/>
      <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
      <arg name="accel_fps"                value="$(arg accel_fps)"/>
      <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
      <arg name="enable_accel"             value="$(arg enable_accel)"/>

      <arg name="publish_tf"               value="$(arg publish_tf)"/>
      <arg name="tf_publish_rate"          value="$(arg tf_publish_rate)"/>

      <arg name="filters"                  value="$(arg filters)"/>
      <arg name="clip_distance"            value="$(arg clip_distance)"/>
      <arg name="linear_accel_cov"         value="$(arg linear_accel_cov)"/>
      <arg name="initial_reset"            value="$(arg initial_reset)"/>
      <arg name="unite_imu_method"         value="$(arg unite_imu_method)"/>
      <arg name="topic_odom_in"            value="$(arg topic_odom_in)"/>
      <arg name="calib_odom_file"          value="$(arg calib_odom_file)"/>
      <arg name="publish_odom_tf"          value="$(arg publish_odom_tf)"/>
      <arg name="allow_no_texture_points"  value="$(arg allow_no_texture_points)"/>
    </include>
  </group>
</launch>
